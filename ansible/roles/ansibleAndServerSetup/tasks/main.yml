  #Sudo Group Setup
  #From: https://github.com/do-community/ansible-playbooks/blob/master/setup_ubuntu1804/playbook.yml#L14
  - name: Make sure we have a 'wheel' + other groups
    group:
      name: "{{item.group}}"
      state: present
    with_items: "{{createUser}}"

  # - name: debug group permissions
  - debug: 
      msg: item group is = "{{item.group}}"
    with_items: "{{groupPermissions}}"   

  #TASK [ansibleAndServerSetup : debug] *************************************************************************************************************************************************************************************ok: [cartman] => (item=None) => {
 #   "msg": "item group is = \"localAdmin\""
#}
# the output of this is kinda funny with the forward slashes, which is probably why the regular expression is not working so well...


  # - name: Set group permissions
  #   lineinfile:
  #     path: /etc/sudoers
  #     state: present
  #     regexp: '^%"{{item.group}}"'
  #     line: "{{item.permission}}"
  #     validate: '/usr/sbin/visudo -cf %s'
  #   become: true
  #   with_items: "{{groupPermissions}}"
  # - debug:
  #   msg: the group is ="{{item.group}}"

  # - name: Allow 'localAdmin' group to have passwordless restart / shutdown
  #   lineinfile:
  #     path: /etc/sudoers
  #     state: present
  #     regexp: '^%localAdmin'
  #     line: '%localAdmin ALL=(ALL) NOPASSWD: /sbin/poweroff, /sbin/reboot, /sbin/shutdown'
  #     validate: '/usr/sbin/visudo -cf %s'
  #   become: true 

  # User + Key Setup
  #From: https://github.com/do-community/ansible-playbooks/blob/master/setup_ubuntu1804/playbook.yml#L14
  - name: Create a new regular user with sudo privileges
    user:
      name: "{{ item.name }}"
      state: present
      groups: "{{ item.group }}"
      append: true
      create_home: true
      shell: /bin/bash
    with_items: "{{createUser}}"
    # when: item.group == "wheel"
    become: true

  - name: Set authorized key for remote user
    authorized_key:
      user: "{{ item.name }}"
      state: present
      key: "{{ item.copy_local_key }}"
    with_items: "{{createUser}}"
    become: true

  - name: Disable password authentication for root
    lineinfile:
      path: /etc/ssh/sshd_config
      state: present
      regexp: '^#?PermitRootLogin'
      line: 'PermitRootLogin prohibit-password'
    become: true

