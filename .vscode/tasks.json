{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        {   "label": "Deploy all cartmanSetupPlaybook",
            "type": "shell",
            "options": {
                "shell": {
                    "executable": "C:\\Windows\\System32\\bash.exe",
                    "args": [ "-c" ]
                }
            },
            "command": [
                "ansible-playbook 'ansible/cartmanSetupPlaybook.yml' -i 'ansible/hosts.yml' --vault-password-file /mnt/c/Users/Tom-Erik/.vault/vault_pass.txt"
            ],
            "group": "build",
            "problemMatcher": []
        },

        {   "label": "Deploy all docker containers",
            "type": "shell",
            "options": {
                "shell": {
                    "executable": "C:\\Windows\\System32\\bash.exe",
                    "args": [ "-c" ]
                }
            },
            "command": [
                "ansible-playbook 'ansible/cartmanSetupPlaybook.yml' -i 'ansible/hosts.yml' --tags='docker_container' --vault-password-file /mnt/c/Users/Tom-Erik/.vault/vault_pass.txt"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": []
        },

        {   "label": "Deploy transmission container",
            "type": "shell",
            "options": {
                "shell": {
                    "executable": "C:\\Windows\\System32\\bash.exe",
                    "args": [ "-c" ]
                }
            },
            "command": [
                "ansible-playbook 'ansible/cartmanSetupPlaybook.yml' -i 'ansible/hosts.yml' --tags='transmission' --vault-password-file /mnt/c/Users/Tom-Erik/.vault/vault_pass.txt"
            ],
            "group": "build",
            "problemMatcher": []
        },

        {   "label": "Deploy portainer container",
            "type": "shell",
            "options": {
                "shell": {
                    "executable": "C:\\Windows\\System32\\bash.exe",
                    "args": [ "-c" ]
                }
            },
            "command": [
                "ansible-playbook 'ansible/cartmanSetupPlaybook.yml' -i 'ansible/hosts.yml' --tags='portainer'"
            ],
            "group": "build",
            "problemMatcher": []
        },

        {   "label": "Deploy plex container",
            "type": "shell",
            "options": {
                "shell": {
                    "executable": "C:\\Windows\\System32\\bash.exe",
                    "args": [ "-c" ]
                }
            },
            "command": [
                "ansible-playbook 'ansible/cartmanSetupPlaybook.yml' -i 'ansible/hosts.yml' --tags='plex'"
            ],
            "group": "build",
            "problemMatcher": []
        },

        {   "label": "Deploy pihole container",
            "type": "shell",
            "options": {
                "shell": {
                    "executable": "C:\\Windows\\System32\\bash.exe",
                    "args": [ "-c" ]
                }
            },
            "command": [
                "ansible-playbook 'ansible/cartmanSetupPlaybook.yml' -i 'ansible/hosts.yml' --tags='pihole' --vault-password-file /mnt/c/Users/Tom-Erik/.vault/vault_pass.txt"
            ],
            "group": "build",
            "problemMatcher": []
        },

        {   "label": "Deploy tautilli container",
            "type": "shell",
            "options": {
                "shell": {
                    "executable": "C:\\Windows\\System32\\bash.exe",
                    "args": [ "-c" ]
                }
            },
            "command": [
                "ansible-playbook 'ansible/cartmanSetupPlaybook.yml' -i 'ansible/hosts.yml' --tags='tautulli'"
            ],
            "group": "build",
            "problemMatcher": []
        },

        {   "label": "Deploy radarr container",
            "type": "shell",
            "options": {
                "shell": {
                    "executable": "C:\\Windows\\System32\\bash.exe",
                    "args": [ "-c" ]
                }
            },
            "command": [
                "ansible-playbook 'ansible/cartmanSetupPlaybook.yml' -i 'ansible/hosts.yml' --tags='radarr'"
            ],
            "group": "build",
            "problemMatcher": []
        },

        {   "label": "Deploy sonarr container",
            "type": "shell",
            "options": {
                "shell": {
                    "executable": "C:\\Windows\\System32\\bash.exe",
                    "args": [ "-c" ]
                }
            },
            "command": [
                "ansible-playbook 'ansible/cartmanSetupPlaybook.yml' -i 'ansible/hosts.yml' --tags='sonarr'"
            ],
            "group": "build",
            "problemMatcher": []
        },

        {   "label": "Deploy homeAssistant container",
            "type": "shell",
            "options": {
                "shell": {
                    "executable": "C:\\Windows\\System32\\bash.exe",
                    "args": [ "-c" ]
                }
            },
            "command": [
                "ansible-playbook 'ansible/cartmanSetupPlaybook.yml' -i 'ansible/hosts.yml' --tags='homeAssistant'"
            ],
            "group": "build",
            "problemMatcher": []
        },

        {   "label": "Deploy lidarr container",
            "type": "shell",
            "options": {
                "shell": {
                    "executable": "C:\\Windows\\System32\\bash.exe",
                    "args": [ "-c" ]
                }
            },
            "command": [
                "ansible-playbook 'ansible/cartmanSetupPlaybook.yml' -i 'ansible/hosts.yml' --tags='lidarr'"
            ],
            "group": "build",
            "problemMatcher": []
        },

        {   "label": "Deploy organizr container",
            "type": "shell",
            "options": {
                "shell": {
                    "executable": "C:\\Windows\\System32\\bash.exe",
                    "args": [ "-c" ]
                }
            },
            "command": [
                "ansible-playbook 'ansible/cartmanSetupPlaybook.yml' -i 'ansible/hosts.yml' --tags='organizr'"
            ],
            "group": "build",
            "problemMatcher": []
        },

        {   "label": "Deploy bazarr container",
            "type": "shell",
            "options": {
                "shell": {
                    "executable": "C:\\Windows\\System32\\bash.exe",
                    "args": [ "-c" ]
                }
            },
            "command": [
                "ansible-playbook 'ansible/cartmanSetupPlaybook.yml' -i 'ansible/hosts.yml' --tags='bazarr'"
            ],
            "group": "build",
            "problemMatcher": []
        },

        {   "label": "Deploy tdarr container",
            "type": "shell",
            "options": {
                "shell": {
                    "executable": "C:\\Windows\\System32\\bash.exe",
                    "args": [ "-c" ]
                }
            },
            "command": [
                "ansible-playbook 'ansible/cartmanSetupPlaybook.yml' -i 'ansible/hosts.yml' --tags='tdarr'"
            ],
            "group": "build",
            "problemMatcher": []
        },

        {   "label": "Deploy **rr containers",
            "type": "shell",
            "options": {
                "shell": {
                    "executable": "C:\\Windows\\System32\\bash.exe",
                    "args": [ "-c" ]
                }
            },
            "command": [
                "ansible-playbook 'ansible/cartmanSetupPlaybook.yml' -i 'ansible/hosts.yml' --tags='sonarr,radarr'"
            ],
            "group": "build",
            "problemMatcher": []
        },

        {   "label": "Build initialServerSetupPlaybook",
            "type": "shell",
            "options": {
                "shell": {
                    "executable": "C:\\Windows\\System32\\bash.exe",
                    "args": [ "-c" ]
                }
            },
            "command": [
                "ansible-playbook 'ansible/initialServerSetupPlaybook.yml' -i 'ansible/hosts.yml'"
            ],
            "problemMatcher": [],
            "group": "build"
        },

        {   "label": "lint all cartmanSetupPlaybook",
            "type": "shell",
            "options": {
                "shell": {
                    "executable": "C:\\Windows\\System32\\bash.exe",
                    "args": [ "-c" ]
                }
            },
            "command": [
                "ansible-lint -x ANSIBLE0002 'ansible/cartmanSetupPlaybook.yml' "
            ],
            "group": "build",
            "problemMatcher": []
        },

        {   "label": "Deploy Samba configuration",
            "type": "shell",
            "options": {
                "shell": {
                    "executable": "C:\\Windows\\System32\\bash.exe",
                    "args": [ "-c" ]
                }
            },
            "command": [
                "ansible-playbook 'ansible/cartmanSetupPlaybook.yml' -i 'ansible/hosts.yml' --tags='samba'"
            ],
            "group": "build",
            "problemMatcher": []
        },

        {   "label": "Deploy rclone role",
            "type": "shell",
            "options": {
                "shell": {
                    "executable": "C:\\Windows\\System32\\bash.exe",
                    "args": [ "-c" ]
                }
            },
            "command": [
                "ansible-playbook 'ansible/cartmanSetupPlaybook.yml' -i 'ansible/hosts.yml' --tags='rclone'"
            ],
            "group": "build",
            "problemMatcher": []
        },

        {   "label": "Deploy mergerfs role",
            "type": "shell",
            "options": {
                "shell": {
                    "executable": "C:\\Windows\\System32\\bash.exe",
                    "args": [ "-c" ]
                }
            },
            "command": [
                "ansible-playbook 'ansible/cartmanSetupPlaybook.yml' -i 'ansible/hosts.yml' --tags='mergerfs'"
            ],
            "group": "build",
            "problemMatcher": []
        },

        {   "label": "Deploy snapraid role",
            "type": "shell",
            "options": {
                "shell": {
                    "executable": "C:\\Windows\\System32\\bash.exe",
                    "args": [ "-c" ]
                }
            },
            "command": [
                "ansible-playbook 'ansible/cartmanSetupPlaybook.yml' -i 'ansible/hosts.yml' --tags='snapraid'"
            ],
            "group": "build",
            "problemMatcher": []
        }
    ]
}


